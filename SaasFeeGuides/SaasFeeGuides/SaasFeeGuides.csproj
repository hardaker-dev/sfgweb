<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>b4dd129a-df21-484e-b617-8184458c442e</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="7.0.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="5.0.1" />
    <PackageReference Include="FluentValidation" Version="8.0.100" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="8.0.100" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="2.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Hosting" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.HttpsPolicy" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="2.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Server.IISIntegration" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Server.Kestrel" Version="2.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="2.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="2.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="2.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer.Design" Version="1.1.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.1.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.3" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="2.1.1" />
    <PackageReference Include="Microsoft.Extensions.DependencyModel" Version="2.1.0" />
    <PackageReference Include="Microsoft.IdentityModel.Tokens" Version="5.2.4" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.1" />
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.2.4" />

    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="1.0.2" />
  </ItemGroup>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="ClientApp\src\app\authenticate\LoginInputs.ts" />
    <None Remove="ClientApp\src\app\models\activitySkuDate.ts" />
    <None Remove="ClientApp\src\app\viewModels\account.ts" />
    <None Remove="ClientApp\src\app\viewModels\activity.ts" />
    <None Remove="ClientApp\src\app\viewModels\activityDate.ts" />
    <None Remove="ClientApp\src\app\viewModels\activitySku.ts" />
    <None Remove="ClientApp\src\app\viewModels\addCustomerBookingResponse.ts" />
    <None Remove="ClientApp\src\app\viewModels\content.ts" />
    <None Remove="ClientApp\src\app\viewModels\customer.ts" />
    <None Remove="ClientApp\src\app\viewModels\customerBooking.ts" />
    <None Remove="ClientApp\src\app\viewModels\historicCustomerBooking.ts" />
    <None Remove="ClientApp\src\app\viewModels\newActivitySkuDate.ts" />
    <None Remove="ClientApp\src\app\viewModels\user.ts" />
    <None Remove="ClientApp\src\app\register\register.component.ts" />
    <None Remove="ClientApp\src\app\services\account.service.ts" />
    <None Remove="ClientApp\src\app\services\activity.service.ts" />
    <None Remove="ClientApp\src\app\services\authentication.service.ts" />
    <None Remove="ClientApp\src\app\services\customer.service.ts" />
    <None Remove="ClientApp\src\assets\Images\logo.png" />
    <None Remove="ClientApp\src\tsconfig.app.json" />
    <None Remove="ClientApp\src\tsconfig.spec.json" />
    <None Remove="ClientApp\tsconfig.json" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="ClientApp\src\assets\Images\logo.png" />
    <Content Include="ClientApp\src\tsconfig.app.json" />
    <Content Include="ClientApp\src\tsconfig.spec.json" />
    <Content Include="ClientApp\tsconfig.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\SaasFeeGuides.Database.Deploy\SaasFeeGuides.Database.Deploy.csproj" />
    <ProjectReference Include="..\SaasFeeGuides.ViewModels\SaasFeeGuides.ViewModels.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="appsettings.AzureTest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="appsettings.Development.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="appsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Migrations\" />
  </ItemGroup>
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\models\activitySkuDate.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\activitySku.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\activityDate.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\newActivitySkuDate.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\content.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\activity.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\addCustomerBookingResponse.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\customerBooking.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\user.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\customer.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\account.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\historicCustomerBooking.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\viewModels\login.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\register\register.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\activity.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\customer.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\authentication.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\account.service.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptJSXEmit>None</TypeScriptJSXEmit>
    <TypeScriptModuleKind />
    <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>

</Project>
